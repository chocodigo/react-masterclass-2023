{"version":3,"sources":["api.ts","routes/Coins.tsx","routes/Price.tsx","routes/Chart.tsx","routes/Coin.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Title","styled","h1","props","theme","accentColor","Container","div","Header","header","CoinsList","ul","Coin","li","containerBgColor","containerTextColor","accentContainerBgColor","accentContainerTextColor","accentOnColor","Loader","span","Img","img","Coins","useQuery","isLoading","coins","data","slice","map","coin","key","id","to","pathname","state","name","src","symbol","toLowerCase","defaultQuotes","USD","ath_date","ath_price","market_cap","market_cap_change_24h","percent_change_1h","percent_change_1y","percent_change_6h","percent_change_7d","percent_change_12h","percent_change_15m","percent_change_24h","percent_change_30d","percent_change_30m","percent_from_price_ath","price","volume_24h","volume_24h_change_24h","Tabs","Tab","surfaceBgColor","surfaceTextColor","InfoWrapper","errorColor","Price","quotes","valueList","title","Info","value","idx","ChartWrapper","Chart","coinId","fetchCoinHistory","type","series","Number","close","options","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","xaxis","labels","axisTicks","categories","Date","time_close","toISOString","yaxis","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","toFixed","x","open","high","low","Overview","OverviewItem","Description","p","isActive","useParams","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","info","fetchCoinTickers","tickersloading","tickersData","loading","rank","description","total_supply","max_supply","path","Router","darkTheme","bgColor","textColor","lightTheme","GlobalStyle","createGlobalStyle","ThemeChangeButton","button","App","useState","isDarkMode","setIsDarkMode","onClick","initialIsOpen","root","ReactDOM","createRoot","document","getElementById","queryClient","QueryClient","render","StrictMode","client"],"mappings":"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","file":"static/js/main.06dd0537.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  // const endDate = Math.floor( Date.now() / 1000);\n  // const startDate = endDate -60* 60*24*7;\n  return fetch(\n    `https://ohlcv-api.nomadcoders.workers.dev?coinId=${coinId}`\n  ).then((response) => response.json());\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoins } from \"../api\";\nimport { Helmet } from \"react-helmet-async\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nconst Title = styled.h1`\n  color: ${(props) => props.theme.accentColor};\n  font-size: 48px;\n`;\n\nconst Container = styled.div`\n  padding: 0 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.containerBgColor};\n  color: ${(props) => props.theme.containerTextColor};\n  transition: color 0.2s ease-in;\n  border-radius: 10px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    transition: color 0.2s ease-in;\n    align-items: center;\n    padding: 20px;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentContainerBgColor};\n    }\n    background-color: ${(props) => props.theme.accentContainerTextColor};\n  }\n  &:active {\n    a {\n      color: ${(props) => props.theme.accentOnColor};\n    }\n    background-color: ${(props) => props.theme.accentColor};\n  }\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\n// 코인 목록\n\nfunction Coins() {\n  const { isLoading, data: coins } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading ...</Loader>\n      ) : (\n        <CoinsList>\n          {coins?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://coinicons-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\n\nexport default Coins;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport MovingIcon from \"@mui/icons-material/Moving\";\nimport TrendingDownIcon from \"@mui/icons-material/TrendingDown\";\nimport HorizontalRuleIcon from \"@mui/icons-material/HorizontalRule\";\n\ninterface PriceProps {\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nexport const defaultQuotes = {\n  USD: {\n    ath_date: \"\",\n    ath_price: 0,\n    market_cap: 0,\n    market_cap_change_24h: 0,\n    percent_change_1h: 0,\n    percent_change_1y: 0,\n    percent_change_6h: 0,\n    percent_change_7d: 0,\n    percent_change_12h: 0,\n    percent_change_15m: 0,\n    percent_change_24h: 0,\n    percent_change_30d: 0,\n    percent_change_30m: 0,\n    percent_from_price_ath: 0,\n    price: 0,\n    volume_24h: 0,\n    volume_24h_change_24h: 0,\n  },\n};\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.div`\n  background-color: ${(props) => props.theme.surfaceBgColor};\n  color: ${(props) => props.theme.surfaceTextColor};\n  font-size: 12px;\n  font-weight: 400;\n  height: 100px;\n  border-radius: 10px;\n  padding: 10px;\n`;\n\nconst InfoWrapper = styled.div<{ state: number }>`\n  display: flex;\n  color: ${(props) =>\n    props.state > 0\n      ? props.theme.errorColor\n      : props.state === 0\n      ? props.theme.containerTextColor\n      : props.theme.accentColor};\n  align-items: center;\n  justify-content: space-between;\n  height: 100%;\n  font-size: 30px;\n`;\n\ninterface IValue {\n  state: number;\n  title: string;\n}\n\nfunction Price({ quotes = defaultQuotes }: PriceProps) {\n  const valueList = [\n    {\n      title: \"1시간\",\n      state: quotes.USD.percent_change_1h,\n    },\n    {\n      title: \"24시간\",\n      state: quotes.USD.percent_change_24h,\n    },\n    {\n      title: \"7일\",\n      state: quotes.USD.percent_change_7d,\n    },\n    {\n      title: \"30일\",\n      state: quotes.USD.percent_change_30d,\n    },\n  ];\n\n  const Info = ({ state, title }: IValue) => {\n    return (\n      <Tab>\n        <div>{title}</div>\n        <InfoWrapper state={state}>\n          <div>{state} %</div>\n          {state > 0 ? (\n            <MovingIcon />\n          ) : state === 0 ? (\n            <HorizontalRuleIcon />\n          ) : (\n            <TrendingDownIcon />\n          )}\n        </InfoWrapper>\n      </Tab>\n    );\n  };\n\n  return (\n    <Tabs>\n      {valueList.map((value, idx) => (\n        <Info key={`info_${idx}`} title={value.title} state={value.state} />\n      ))}\n    </Tabs>\n  );\n}\n\nexport default Price;\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport styled from \"styled-components\";\n\ninterface IHistorical {\n  time_open: number;\n  time_close: number;\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  volume: string;\n  market_cap: number;\n}\n\ninterface ChartProps {\n  coinId: string;\n}\n\nconst ChartWrapper = styled.div`\n  background-color: ${(props) => props.theme.containerBgColor};\n  border-radius: 10px;\n  width: 100%;\n  height: 300px;\n  //display: flex;\n  //align-items: center;\n  //justify-content: center;\n  margin-bottom: 10px;\n`;\n\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\n    fetchCoinHistory(coinId)\n  );\n  return (\n    <>\n      <ChartWrapper>\n        {isLoading ? (\n          \"Loading Chart...\"\n        ) : (\n          <ApexChart\n            type={\"line\"}\n            series={[\n              {\n                name: \"Price\",\n                data:\n                  (data?.map((price) => Number(price.close)) as number[]) || [],\n              },\n            ]}\n            options={{\n              theme: {\n                mode: \"dark\",\n              },\n              chart: {\n                height: 300,\n                width: 500,\n                toolbar: {\n                  show: false,\n                },\n                background: \"transparent\",\n              },\n              grid: {\n                show: false,\n              },\n              stroke: {\n                curve: \"smooth\",\n                width: 4,\n              },\n              xaxis: {\n                labels: {\n                  show: false,\n                },\n                axisTicks: {\n                  show: false,\n                },\n                type: \"datetime\",\n                categories: data?.map((price) =>\n                  new Date(price.time_close * 1000).toISOString()\n                ),\n              },\n              yaxis: {\n                labels: {\n                  show: false,\n                },\n              },\n              fill: {\n                type: \"gradient\",\n                gradient: {\n                  gradientToColors: [\"#0be881\"],\n                  stops: [0, 100],\n                },\n              },\n              colors: [\"#0fbcf9\"],\n              tooltip: {\n                y: {\n                  formatter: (value) => `${value.toFixed(1)}`,\n                },\n              },\n            }}\n          />\n        )}\n      </ChartWrapper>\n      <ChartWrapper>\n        {isLoading ? (\n          \"Loading Chart...\"\n        ) : (\n          <ApexChart\n            type={\"candlestick\"}\n            series={[\n              {\n                data:\n                  data?.map((price) => {\n                    return {\n                      x: new Date(price.time_close),\n                      y: [price.open, price.high, price.low, price.close],\n                    };\n                  }) || [],\n              },\n            ]}\n            options={{\n              chart: {\n                height: 300,\n                width: 500,\n                toolbar: {\n                  show: false,\n                },\n                background: \"transparent\",\n              },\n              grid: {\n                show: false,\n              },\n              xaxis: {\n                labels: {\n                  show: false,\n                },\n                axisTicks: {\n                  show: false,\n                },\n                type: \"datetime\",\n              },\n              yaxis: {\n                labels: {\n                  show: false,\n                },\n              },\n            }}\n          />\n        )}\n      </ChartWrapper>\n    </>\n  );\n}\n\nexport default Chart;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Route,\n  Switch,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Price, {defaultQuotes} from \"./Price\";\nimport Chart from \"./Chart\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport { Helmet } from \"react-helmet-async\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\ninterface RouteParams {\n  coinId: string;\n}\nconst Container = styled.div`\n  padding: 0 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst Title = styled.h1`\n  color: ${(props) => props.theme.accentColor};\n  font-size: 48px;\n`;\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 20px;\n  border-radius: 10px;\n  background-color: ${(props) => props.theme.containerBgColor};\n  color: ${(props) => props.theme.containerTextColor};\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: ${(props) =>\n    props.isActive\n      ? props.theme.accentContainerBgColor\n      : props.theme.containerBgColor};\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive\n      ? props.theme.accentContainerTextColor\n      : props.theme.containerTextColor};\n  a {\n    display: block;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentContainerBgColor};\n    }\n    background-color: ${(props) => props.theme.accentContainerTextColor};\n  }\n  &:active {\n    a {\n      color: ${(props) => props.theme.accentOnColor};\n    }\n    background-color: ${(props) => props.theme.accentColor};\n  }\n`;\n\ninterface RouteState {\n  name: string;\n}\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  logo: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_a: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n// 코인 상세 정보\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n\n  const { isLoading: infoLoading, data: info } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersloading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId)\n    // {\n    //   // 5초 간격으로 호출\n    //   refetchInterval: 5000,\n    // }\n  );\n\n  const loading = infoLoading || tickersloading;\n\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {\" \"}\n          {state?.name ? state.name : loading ? \"Loading...\" : info?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Link to={\"/\"}>\n          <ArrowBackIcon />\n        </Link>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : info?.name}\n        </Title>\n        <Img\n          src={`https://coinicons-api.vercel.app/api/icon/${tickersData?.symbol.toLowerCase()}`}\n        />\n      </Header>\n      {loading ? (\n        <Loader>Loading ...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{info?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${info?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>$ {tickersData?.quotes.USD.price}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{info?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/${coinId}/price`}>\n              <Price quotes={tickersData?.quotes || defaultQuotes} />\n            </Route>\n            <Route path={`/${coinId}/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Coin;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Coins from \"./routes/Coins\";\nimport Coin from \"./routes/Coin\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      {/*한 번에 하나의 Route를 렌더링할 수 있는 방법*/}\n      <Switch>\n        <Route path={\"/:coinId\"}>\n          <Coin />\n        </Route>\n        <Route path={\"/\"}>\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#1C1B1F\",\n  textColor: \"#E6E1E5\",\n  accentColor: \"#D0BCFF\",\n  accentOnColor: \"#381E73\",\n  accentContainerBgColor: \"#4F378B\",\n  accentContainerTextColor: \"#EADDFF\",\n  containerBgColor: \"#4A4458\",\n  containerTextColor: \"#FFD8E4\",\n  surfaceBgColor: \"#49454F\",\n  surfaceTextColor: \"#CAC4CF\",\n  errorColor: \"#F2B8B5\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"#FFFBFE\",\n  textColor: \"#1C1B1F\",\n  accentColor: \"#6750A4\",\n  accentOnColor: \"#FFFBFE\",\n  accentContainerBgColor: \"#6750A4\",\n  accentContainerTextColor: \"#FBFAFB\",\n  containerBgColor: \"#E8DEF8\",\n  containerTextColor: \"#64394A\",\n  surfaceBgColor: \"#E7E0EC\",\n  surfaceTextColor: \"#49454E\",\n  errorColor: \"#B3261E\",\n};\n","import React, { useState } from \"react\";\nimport Router from \"./Router\";\nimport styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport DarkModeIcon from \"@mui/icons-material/DarkMode\";\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\nconst GlobalStyle = createGlobalStyle`\n  \n  /* http://meyerweb.com/eric/tools/css/reset/\n     v5.0.1 | 20191019\n     License: none (public domain)\n  */\n  @import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300&display=swap');\n  \n  \n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n      display: none;\n  }\n  body {\n    line-height: 1;\n  }\n  menu, ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  *{\n    box-sizing: border-box;\n  }\n  body{\n    font-weight: 300;\n    font-family: 'Source Sans Pro', sans-serif;\n    background-color: ${(props) => props.theme.bgColor};\n    color:${(props) => props.theme.textColor};\n    line-height: 1.2;\n  }\n  a{\n    text-decoration: none;\n    color: inherit;\n  }\n`;\nconst ThemeChangeButton = styled.button`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: ${(props) => props.theme.containerBgColor};\n  padding: 7px;\n  border-radius: 10px;\n  color: ${(props) => props.theme.containerTextColor};\n  &:hover {\n    color: ${(props) => props.theme.accentContainerBgColor};\n    background-color: ${(props) => props.theme.accentContainerTextColor};\n  }\n  &:active {\n    color: ${(props) => props.theme.accentOnColor};\n    background-color: ${(props) => props.theme.accentColor};\n  }\n`;\nfunction App() {\n  const [isDarkMode, setIsDarkMode] = useState(true);\n\n  const themeClickHandler = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  return (\n    <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\n      <ThemeChangeButton onClick={themeClickHandler}>\n        {isDarkMode ? <LightModeIcon /> : <DarkModeIcon />}\n      </ThemeChangeButton>\n      <GlobalStyle />\n      <HelmetProvider>\n        <Router />\n      </HelmetProvider>\n      <ReactQueryDevtools initialIsOpen={true} />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\n\nconst queryClient = new QueryClient();\n\nroot.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}